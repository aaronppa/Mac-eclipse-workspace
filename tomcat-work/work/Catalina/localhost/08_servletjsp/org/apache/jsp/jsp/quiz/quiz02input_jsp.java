/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.11
 * Generated at: 2018-09-03 06:44:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.quiz;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class quiz02input_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>입사지원</title>\n");
      out.write("<style>\n");
      out.write("\th1, .item{\n");
      out.write("\t\ttext-weight: bold;\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<form action=\"quiz02output.jsp\">\n");
      out.write("\t<div>\n");
      out.write("\t\t<h1>입사지원</h1>\n");
      out.write("\t</div>\n");
      out.write("\t<div class=\"first\">\n");
      out.write("\t\t<h4>아래 항목을 입력해주세요.</h4>\n");
      out.write("\t\t<h4 class=\"item\">개인정보</h4>\n");
      out.write("\t\t이름\n");
      out.write("\t\t<input type=\"text\" name=\"name\"><br>\n");
      out.write("\t\t핸드폰\n");
      out.write("\t\t<input type=\"text\" name=\"phone\"><br>\n");
      out.write("\t\t이메일주소\n");
      out.write("\t\t<input type=\"email\" name=\"email\"><br>\n");
      out.write("\t</div>\n");
      out.write("\t<div>\n");
      out.write("\t\t<h4 class=\"item\">학과를 선택해 주세요.</h4>\n");
      out.write("\t\t<input type=\"radio\" name=\"major\" id=\"major1\" value=\"1\">\n");
      out.write("\t\t<label for=\"major1\">컴퓨터공학과</label>\n");
      out.write("\t\t<input type=\"radio\" name=\"major\" id=\"major2\" value=\"2\">\n");
      out.write("\t\t<label for=\"major2\">전자공학</label>\n");
      out.write("\t\t<input type=\"radio\" name=\"major\" id=\"major3\" value=\"3\">\n");
      out.write("\t\t<label for=\"major3\">수학과</label>\n");
      out.write("\t\t<input type=\"radio\" name=\"major\" id=\"major4\" value=\"4\">\n");
      out.write("\t\t<label for=\"major3\">산업공학과</label>\n");
      out.write("\t\t<br>\n");
      out.write("\t\t\n");
      out.write("\t\t<h4 class=\"item\">이수 과목은 무엇입니까?</h4>\n");
      out.write("\t\t<input type=\"checkbox\" name=\"subject\" id=\"subj1\" value=\"1\" />\n");
      out.write("\t\t<label for=\"subj1\">EJB</label>\n");
      out.write("\t\t<input type=\"checkbox\" name=\"subject\" id=\"subj2\" value=\"2\" />\n");
      out.write("\t\t<label for=\"subj2\">Spring</label>\n");
      out.write("\t\t<input type=\"checkbox\" name=\"subject\" id=\"subj3\" value=\"3\" />\n");
      out.write("\t\t<label for=\"subj3\">UML</label><br>\n");
      out.write("\t\t<input type=\"checkbox\" name=\"subject\" id=\"subj4\" value=\"4\" />\n");
      out.write("\t\t<label for=\"subj4\">JDBC</label>\n");
      out.write("\t\t<input type=\"checkbox\" name=\"subject\" id=\"subj5\" value=\"5\" />\n");
      out.write("\t\t<label for=\"subj5\">서블릿</label>\n");
      out.write("\t\t<input type=\"checkbox\" name=\"subject\" id=\"subj6\" value=\"6\">\n");
      out.write("\t\t<label for=\"subj6\">JSP</label>\t\t\n");
      out.write("\t\t\n");
      out.write("\t</div>\n");
      out.write("\t<div>\n");
      out.write("\t\t<p>정보 발송방법\n");
      out.write("\t\t<select name=\"comm\">\n");
      out.write("\t\t\t<option value=\"1\">이메일</option>\n");
      out.write("\t\t\t<option value=\"2\">우편</option>\n");
      out.write("\t\t</select>\n");
      out.write("\t</div>\n");
      out.write("\t<div>\n");
      out.write("\t\t<input type=\"checkbox\" name=\"privacy\" value=\"y\" id=\"open\"/>\n");
      out.write("\t\t<label for=\"open\">개인정보 이용 약관에 동의합니다.</label> \n");
      out.write("\t</div>\n");
      out.write("\t<br>\n");
      out.write("\t<div class=\"submit\">\n");
      out.write("\t\t<button>전송</button>\n");
      out.write("\t</div>\n");
      out.write("\t</form>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
